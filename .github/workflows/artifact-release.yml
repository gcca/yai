name: Build and Package yAI Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential g++ ninja-build libssl-dev libbz2-dev libicu-dev python3-dev wget python3-dev python3-pip python3-venv

    - name: Cache Boost
      id: cache-boost
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/boost_install
        key: boost-1.87.0-${{ runner.os }}

    - name: Install Boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/boostorg/boost/releases/download/boost-1.87.0/boost-1.87.0-b2-nodocs.tar.gz
        tar -xzf boost-1.87.0-b2-nodocs.tar.gz
        cd boost-1.87.0
        ./bootstrap.sh --with-toolset=gcc --prefix=${{ github.workspace }}/boost_install
        ./b2 -j$(nproc) toolset=clang cxxstd=20 link=shared threading=multi variant=release --with-system --with-json
        ./b2 install

    - name: Build ABI modules
      run: |
        BOOST_ROOT=${{ github.workspace }}/boost_install python3 setup.py build_ext --inplace

    - name: Install to staging directory
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --without dev

    - name: Create ZIP package
      run: |
        zip -r yai-package.zip \
          manage.py \
          booking \
          venv \
          boost_install \
          yai_chat_abi.*.so \
          yai \
          yai_daily \
          yai_frame \
          yai_signin \
          static \
          pyproject.toml

    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: yai-package
        path: yai-package.zip

  release:
    needs: build
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download ZIP artifact
      uses: actions/download-artifact@v4
      with:
        name: yai-package

    - name: Generate unique tag
      id: tag
      run: |
        echo "TAG_NAME=release-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Latest build from master"
        body: "Automated release from master branch"
        files: yai-package.zip
        draft: false
        prerelease: false
